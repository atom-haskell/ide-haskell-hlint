"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atom_1 = require("atom");
async function highlightCode(src, grammarName) {
    const ed = new atom_1.TextEditor({
        readonly: true,
        keyboardInputEnabled: false,
        showInvisibles: false,
        tabLength: atom.config.get('editor.tabLength'),
    });
    const el = atom.views.getView(ed);
    try {
        el.setUpdatedSynchronously(true);
        el.style.pointerEvents = 'none';
        el.style.position = 'absolute';
        el.style.width = '0px';
        el.style.height = '1px';
        atom.views.getView(atom.workspace).appendChild(el);
        atom.grammars.assignLanguageMode(ed.getBuffer(), grammarName);
        ed.setText(src);
        await editorTokenized(ed);
        const html = Array.from(el.querySelectorAll('.line:not(.dummy)'));
        return html.map((el) => el.innerHTML).join('\n');
    }
    finally {
        el.remove();
    }
}
exports.highlightCode = highlightCode;
async function editorTokenized(editor) {
    return new Promise((resolve) => {
        if (editor.getBuffer().getLanguageMode().fullyTokenized) {
            resolve();
        }
        else {
            const disp = editor.onDidTokenize(() => {
                disp.dispose();
                resolve();
            });
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlnaGxpZ2h0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2hpZ2hsaWdodC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUFpQztBQUUxQixLQUFLLFVBQVUsYUFBYSxDQUFDLEdBQVcsRUFBRSxXQUFtQjtJQUNsRSxNQUFNLEVBQUUsR0FBRyxJQUFJLGlCQUFVLENBQUM7UUFDeEIsUUFBUSxFQUFFLElBQUk7UUFDZCxvQkFBb0IsRUFBRSxLQUFLO1FBQzNCLGNBQWMsRUFBRSxLQUFLO1FBQ3JCLFNBQVMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztLQUMvQyxDQUFDLENBQUE7SUFDRixNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsQ0FBQTtJQUNqQyxJQUFJO1FBQ0YsRUFBRSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ2hDLEVBQUUsQ0FBQyxLQUFLLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQTtRQUMvQixFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUE7UUFDOUIsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFBO1FBQ3RCLEVBQUUsQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQTtRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ2xELElBQUksQ0FBQyxRQUFRLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFBO1FBQzdELEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7UUFDZixNQUFNLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUN6QixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLENBQUE7UUFDakUsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0tBQ2pEO1lBQVM7UUFDUixFQUFFLENBQUMsTUFBTSxFQUFFLENBQUE7S0FDWjtBQUNILENBQUM7QUF2QkQsc0NBdUJDO0FBRUQsS0FBSyxVQUFVLGVBQWUsQ0FBQyxNQUFrQjtJQUMvQyxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDN0IsSUFBSSxNQUFNLENBQUMsU0FBUyxFQUFFLENBQUMsZUFBZSxFQUFFLENBQUMsY0FBYyxFQUFFO1lBQ3ZELE9BQU8sRUFBRSxDQUFBO1NBQ1Y7YUFBTTtZQUNMLE1BQU0sSUFBSSxHQUFHLE1BQU0sQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFO2dCQUNyQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUE7Z0JBQ2QsT0FBTyxFQUFFLENBQUE7WUFDWCxDQUFDLENBQUMsQ0FBQTtTQUNIO0lBQ0gsQ0FBQyxDQUFDLENBQUE7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVGV4dEVkaXRvciB9IGZyb20gJ2F0b20nXG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoaWdobGlnaHRDb2RlKHNyYzogc3RyaW5nLCBncmFtbWFyTmFtZTogc3RyaW5nKSB7XG4gIGNvbnN0IGVkID0gbmV3IFRleHRFZGl0b3Ioe1xuICAgIHJlYWRvbmx5OiB0cnVlLFxuICAgIGtleWJvYXJkSW5wdXRFbmFibGVkOiBmYWxzZSxcbiAgICBzaG93SW52aXNpYmxlczogZmFsc2UsXG4gICAgdGFiTGVuZ3RoOiBhdG9tLmNvbmZpZy5nZXQoJ2VkaXRvci50YWJMZW5ndGgnKSxcbiAgfSlcbiAgY29uc3QgZWwgPSBhdG9tLnZpZXdzLmdldFZpZXcoZWQpXG4gIHRyeSB7XG4gICAgZWwuc2V0VXBkYXRlZFN5bmNocm9ub3VzbHkodHJ1ZSlcbiAgICBlbC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ25vbmUnXG4gICAgZWwuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnXG4gICAgZWwuc3R5bGUud2lkdGggPSAnMHB4J1xuICAgIGVsLnN0eWxlLmhlaWdodCA9ICcxcHgnXG4gICAgYXRvbS52aWV3cy5nZXRWaWV3KGF0b20ud29ya3NwYWNlKS5hcHBlbmRDaGlsZChlbClcbiAgICBhdG9tLmdyYW1tYXJzLmFzc2lnbkxhbmd1YWdlTW9kZShlZC5nZXRCdWZmZXIoKSwgZ3JhbW1hck5hbWUpXG4gICAgZWQuc2V0VGV4dChzcmMpXG4gICAgYXdhaXQgZWRpdG9yVG9rZW5pemVkKGVkKVxuICAgIGNvbnN0IGh0bWwgPSBBcnJheS5mcm9tKGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy5saW5lOm5vdCguZHVtbXkpJykpXG4gICAgcmV0dXJuIGh0bWwubWFwKChlbCkgPT4gZWwuaW5uZXJIVE1MKS5qb2luKCdcXG4nKVxuICB9IGZpbmFsbHkge1xuICAgIGVsLnJlbW92ZSgpXG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZWRpdG9yVG9rZW5pemVkKGVkaXRvcjogVGV4dEVkaXRvcikge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICBpZiAoZWRpdG9yLmdldEJ1ZmZlcigpLmdldExhbmd1YWdlTW9kZSgpLmZ1bGx5VG9rZW5pemVkKSB7XG4gICAgICByZXNvbHZlKClcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgZGlzcCA9IGVkaXRvci5vbkRpZFRva2VuaXplKCgpID0+IHtcbiAgICAgICAgZGlzcC5kaXNwb3NlKClcbiAgICAgICAgcmVzb2x2ZSgpXG4gICAgICB9KVxuICAgIH1cbiAgfSlcbn1cbiJdfQ==